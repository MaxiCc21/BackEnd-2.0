openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: Documentación de la API para el acceso y registro de usuarios
paths:
  /session/acceso:
    get:
      summary: Renderizar página de inicio de sesión de usuario
      tags:
        - Session User
      responses:
        "200":
          description: Página de inicio de sesión de usuario renderizada
    post:
      summary: Inicio de sesión de usuario
      tags:
        - Session User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
              required:
                - email
                - password
      responses:
        "200":
          description: Usuario inició sesión exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ok:
                    type: boolean
                  statusMessage:
                    type: string
        "400":
          description: Datos de usuario incorrectos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ok:
                    type: boolean
                  statusMessage:
                    type: string
        "500":
          description: Error inesperado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ok:
                    type: boolean
                  statusMessage:
                    type: string
  /session/registro:
    get:
      summary: Renderizar página de registro de usuario
      tags:
        - Session User
      responses:
        "200":
          description: Página de registro de usuario renderizada
    post:
      summary: Registro de usuario
      tags:
        - Session User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                password:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
                docType:
                  type: string
                  enum:
                    - DNI
                    - D.N.I
                    - Pasaporte
                docNumber:
                  type: string
              required:
                - name
                - lastname
                - email
                - password
                - dateOfBirth
                - docType
                - docNumber
      responses:
        "200":
          description: Usuario creado correctamente
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Error al crear usuario
          content:
            text/plain:
              schema:
                type: string
  /session/userdata/:
    get:
      summary: Renderiza una pagina donde se muestran los datos del usuario
      tags:
        - Session User
      responses:
        "200":
          description: Página de datos de usuario renderizada
  /session/recuperarContrasena:
    get:
      summary: Renderizar página de recuperar contraseña
      tags:
        - Session User
      responses:
        "200":
          description: Página de recuperar contraseña, donde pide el email para validar que el usuario exista y manda un mail para realizar el cambio de contraseña
    post:
      summary: Envia el mail para verificar que sea el usuario quien esta pidiendo el cambio de contraseña
      tags:
        - Session User

  schemas:
    User:
      type: object
      required:
        - name
        - lastname
        - email
        - password
        - dateOfBirth
        - docType
        - docNumber
      properties:
        name:
          type: string
          description: Nombre del usuario
        lastname:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        dateOfBirth:
          type: string
          format: date
          description: Fecha de nacimiento del usuario
        docType:
          type: string
          enum:
            - DNI
            - D.N.I
            - Pasaporte
          description: Tipo de documento del usuario
        docNumber:
          type: string
          description: Número de documento del usuario
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del usuario
        status:
          type: string
          enum:
            - user
            - admin
          description: Estado del usuario
        resetPasswordToken:
          type: string
          nullable: true
          description: Token para restablecimiento de contraseña
        resetPasswordExpires:
          type: string
          format: date-time
          nullable: true
          description: Fecha de expiración del token para restablecimiento de contraseña
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: "#/components/schemas/Category"
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: "#/components/schemas/Tag"
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
